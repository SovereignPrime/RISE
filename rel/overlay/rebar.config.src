%% vim: ts=4 sw=4 et ft=erlang
{sub_dirs, [
    "site", 
    "deps"
]}.

{require_otp_vsn, "R16B0[1-3]|17"}.

{cover_enabled, true}.

{erl_opts, [debug_info, fail_on_warning]}.

{deps_dir, ["lib"]}.

{port_env, [
            {"win32", "CC" , "gcc"},
            {"win32", "CXX", "g++"},
            {"win32", "DRV_CXX_TEMPLATE",
             "$CXX -c $CXXFLAGS $DRV_CFLAGS $PORT_IN_FILES -o $PORT_OUT_FILE"},
            {"win32", "DRV_CC_TEMPLATE",
             "$CC -c $CFLAGS $DRV_CFLAGS $PORT_IN_FILES -o $PORT_OUT_FILE"},
            {"win32", "DRV_LINK_TEMPLATE",
             "$CC $PORT_IN_FILES $LDFLAGS $DRV_LDFLAGS -o $PORT_OUT_FILE"},
            {"win32", "EXE_CXX_TEMPLATE",
             "$CXX -c $CXXFLAGS $EXE_CFLAGS $PORT_IN_FILES -o $PORT_OUT_FILE"},
            {"win32", "EXE_CC_TEMPLATE",
             "$CC -c $CFLAGS $EXE_CFLAGS $PORT_IN_FILES -o $PORT_OUT_FILE"},
            {"win32", "EXE_LINK_TEMPLATE",
             "$CC $PORT_IN_FILES $LDFLAGS $EXE_LDFLAGS -o $PORT_OUT_FILE"},
            {"win32", "DRV_CFLAGS" , "-g -Wall -fPIC $ERL_CFLAGS"},
            {"win32", "DRV_LDFLAGS", "-shared $ERL_LDFLAGS"},
            {"win32", "EXE_CFLAGS" , "-g -Wall -fPIC $ERL_CFLAGS"},
            {"win32", "EXE_LDFLAGS", "$ERL_LDFLAGS"},

            %{"win32", "ERL_CFLAGS", lists:concat([" -I", erl_interface_dir(include),
            %                             " -I", filename:join(erts_dir(), "include"),
            %                             " "])},

            %{"win32", "ERL_EI_LIBDIR", erl_interface_dir(lib)},
            {"win32", "ERL_LDFLAGS"  , " -L$ERL_EI_LIBDIR -lerl_interface -lei"}
           % {"win32", "ERLANG_ARCH"  , },
           % {"win32", "ERLANG_TARGET", rebar_utils:get_arch()}
           ]}.

{deps, [
    %% START_PLATFORM_DEPENDENCIES
    %% These lines will be replaced with any platform specific dependencies.
    %% The platform-sepecific dependencies can be located in
    %% rel/overlay/<platform>/rebar.config.deps
    %% END_PLATFORM_DEPENDENCIES

    %% Uncomment the following lines and comment the bottom lines with specific
    %% tags to always pull the latest versions
    %%{nitrogen_core, ".*",   {git, "git://github.com/nitrogen/nitrogen_core",{branch, master}}},
    %%{nprocreg,      ".*",   {git, "git://github.com/nitrogen/nprocreg",     {branch, master}}},
    {simple_bridge, ".*",   {git, "git://github.com/nitrogen/simple_bridge",{branch, master}}},
    %%{sync,          ".*",   {git, "git://github.com/rustyio/sync",          {branch, master}}}

    %% Get specific tagged version
    {nitrogen_core, ".*",   {git, "git://github.com/SovereignPrime/nitrogen_core"}},
    {nprocreg,      ".*",   {git, "git://github.com/nitrogen/nprocreg",     {tag, "v0.2.1"}}},
    %% {simple_bridge, ".*",   {git, "git://github.com/nitrogen/simple_bridge",{tag, "v1.4.0"}}},
    {cowboy,        ".*",   {git, "git://github.com/extend/cowboy",         {tag, "0.8.6"}}},
    {ranch,         ".*",   {git, "git://github.com/extend/ranch",          {tag, "0.8.5"}}},
    {mimetypes,     ".*",   {git, "git://github.com/spawngrid/mimetypes",   {branch, master}}},
    {mochijson2,    ".*",   {git, "git://github.com/bjnortier/mochijson2.git", "3663fb01fd98958181adc2d1300c7bfa553e1434"}},
    {bitmessage, ".*", {git, "git://github.com/SovereignPrime/BitMessage.erl.git"}},
    {eminer, ".*", {git, "git://github.com/t0ha/eminer.git"}},
    {pat, ".*", {git, "git://github.com/selectel/pat.git", "3c0916931065d037d66f884601e7d740e2a3d7fe"}},
    {etorrent_core, ".*", {git, "git://github.com/SovereignPrime/etorrent_core.git"}},
    {sigma_search, ".*", {git, "git://github.com/SovereignPrime/sigma_search.git", {branch, master}}},
    {sync,          ".*",   {git, "git://github.com/rustyio/sync",          "a8366be73244383c07f9cafe30b72e83f3ad0621"}}
]}.
